
package ws.flightmapping;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "flightMappingService", targetNamespace = "http://flightMapping.ws", wsdlLocation = "file:/Users/srnjcbsn/TravelGoodBackUp/FlightMappingService/src/conf/xml-resources/web-services/FlightMappingService/wsdl/flightMapping.wsdl")
public class FlightMappingService
    extends Service
{

    private final static URL FLIGHTMAPPINGSERVICE_WSDL_LOCATION;
    private final static WebServiceException FLIGHTMAPPINGSERVICE_EXCEPTION;
    private final static QName FLIGHTMAPPINGSERVICE_QNAME = new QName("http://flightMapping.ws", "flightMappingService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/Users/srnjcbsn/TravelGoodBackUp/FlightMappingService/src/conf/xml-resources/web-services/FlightMappingService/wsdl/flightMapping.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        FLIGHTMAPPINGSERVICE_WSDL_LOCATION = url;
        FLIGHTMAPPINGSERVICE_EXCEPTION = e;
    }

    public FlightMappingService() {
        super(__getWsdlLocation(), FLIGHTMAPPINGSERVICE_QNAME);
    }

    public FlightMappingService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    /**
     * 
     * @return
     *     returns FlightMappingPortType
     */
    @WebEndpoint(name = "flightMappingPort")
    public FlightMappingPortType getFlightMappingPort() {
        return super.getPort(new QName("http://flightMapping.ws", "flightMappingPort"), FlightMappingPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns FlightMappingPortType
     */
    @WebEndpoint(name = "flightMappingPort")
    public FlightMappingPortType getFlightMappingPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://flightMapping.ws", "flightMappingPort"), FlightMappingPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (FLIGHTMAPPINGSERVICE_EXCEPTION!= null) {
            throw FLIGHTMAPPINGSERVICE_EXCEPTION;
        }
        return FLIGHTMAPPINGSERVICE_WSDL_LOCATION;
    }

}
